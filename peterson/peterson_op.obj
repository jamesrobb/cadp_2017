
peterson_op:     file format elf64-x86-64


Disassembly of section .init:

00000000004004f8 <_init>:
  4004f8:	48 83 ec 08          	sub    $0x8,%rsp
  4004fc:	48 8b 05 f5 0a 20 00 	mov    0x200af5(%rip),%rax        # 600ff8 <__gmon_start__>
  400503:	48 85 c0             	test   %rax,%rax
  400506:	74 02                	je     40050a <_init+0x12>
  400508:	ff d0                	callq  *%rax
  40050a:	48 83 c4 08          	add    $0x8,%rsp
  40050e:	c3                   	retq   

Disassembly of section .plt:

0000000000400510 <.plt>:
  400510:	ff 35 f2 0a 20 00    	pushq  0x200af2(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400516:	ff 25 f4 0a 20 00    	jmpq   *0x200af4(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40051c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400520 <pthread_create@plt>:
  400520:	ff 25 f2 0a 20 00    	jmpq   *0x200af2(%rip)        # 601018 <pthread_create@GLIBC_2.2.5>
  400526:	68 00 00 00 00       	pushq  $0x0
  40052b:	e9 e0 ff ff ff       	jmpq   400510 <.plt>

0000000000400530 <fprintf@plt>:
  400530:	ff 25 ea 0a 20 00    	jmpq   *0x200aea(%rip)        # 601020 <fprintf@GLIBC_2.2.5>
  400536:	68 01 00 00 00       	pushq  $0x1
  40053b:	e9 d0 ff ff ff       	jmpq   400510 <.plt>

0000000000400540 <fflush@plt>:
  400540:	ff 25 e2 0a 20 00    	jmpq   *0x200ae2(%rip)        # 601028 <fflush@GLIBC_2.2.5>
  400546:	68 02 00 00 00       	pushq  $0x2
  40054b:	e9 c0 ff ff ff       	jmpq   400510 <.plt>

0000000000400550 <pthread_join@plt>:
  400550:	ff 25 da 0a 20 00    	jmpq   *0x200ada(%rip)        # 601030 <pthread_join@GLIBC_2.2.5>
  400556:	68 03 00 00 00       	pushq  $0x3
  40055b:	e9 b0 ff ff ff       	jmpq   400510 <.plt>

Disassembly of section .text:

0000000000400560 <main>:
     goto start;
     return NULL;
}

int main()
{
  400560:	48 83 ec 28          	sub    $0x28,%rsp
     pthread_t p1, p2;
     int a1 = 0, a2 = 1;

     pthread_create(&p1, NULL, process, &a1);
  400564:	ba c0 06 40 00       	mov    $0x4006c0,%edx
  400569:	31 f6                	xor    %esi,%esi
  40056b:	48 8d 4c 24 08       	lea    0x8(%rsp),%rcx
  400570:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
     int a1 = 0, a2 = 1;
  400575:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%rsp)
  40057c:	00 
  40057d:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
  400584:	00 
     pthread_create(&p1, NULL, process, &a1);
  400585:	e8 96 ff ff ff       	callq  400520 <pthread_create@plt>
     pthread_create(&p2, NULL, process, &a2);
  40058a:	48 8d 4c 24 0c       	lea    0xc(%rsp),%rcx
  40058f:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
  400594:	ba c0 06 40 00       	mov    $0x4006c0,%edx
  400599:	31 f6                	xor    %esi,%esi
  40059b:	e8 80 ff ff ff       	callq  400520 <pthread_create@plt>
     pthread_join(p2, NULL);
  4005a0:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
  4005a5:	31 f6                	xor    %esi,%esi
  4005a7:	e8 a4 ff ff ff       	callq  400550 <pthread_join@plt>
     pthread_join(p1, NULL);
  4005ac:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
  4005b1:	31 f6                	xor    %esi,%esi
  4005b3:	e8 98 ff ff ff       	callq  400550 <pthread_join@plt>
     return 0;
}
  4005b8:	31 c0                	xor    %eax,%eax
  4005ba:	48 83 c4 28          	add    $0x28,%rsp
  4005be:	c3                   	retq   
  4005bf:	90                   	nop

00000000004005c0 <_start>:
  4005c0:	31 ed                	xor    %ebp,%ebp
  4005c2:	49 89 d1             	mov    %rdx,%r9
  4005c5:	5e                   	pop    %rsi
  4005c6:	48 89 e2             	mov    %rsp,%rdx
  4005c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4005cd:	50                   	push   %rax
  4005ce:	54                   	push   %rsp
  4005cf:	49 c7 c0 a0 07 40 00 	mov    $0x4007a0,%r8
  4005d6:	48 c7 c1 30 07 40 00 	mov    $0x400730,%rcx
  4005dd:	48 c7 c7 60 05 40 00 	mov    $0x400560,%rdi
  4005e4:	ff 15 06 0a 20 00    	callq  *0x200a06(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  4005ea:	f4                   	hlt    
  4005eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004005f0 <deregister_tm_clones>:
  4005f0:	b8 4f 10 60 00       	mov    $0x60104f,%eax
  4005f5:	55                   	push   %rbp
  4005f6:	48 2d 48 10 60 00    	sub    $0x601048,%rax
  4005fc:	48 83 f8 0e          	cmp    $0xe,%rax
  400600:	48 89 e5             	mov    %rsp,%rbp
  400603:	76 1b                	jbe    400620 <deregister_tm_clones+0x30>
  400605:	b8 00 00 00 00       	mov    $0x0,%eax
  40060a:	48 85 c0             	test   %rax,%rax
  40060d:	74 11                	je     400620 <deregister_tm_clones+0x30>
  40060f:	5d                   	pop    %rbp
  400610:	bf 48 10 60 00       	mov    $0x601048,%edi
  400615:	ff e0                	jmpq   *%rax
  400617:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40061e:	00 00 
  400620:	5d                   	pop    %rbp
  400621:	c3                   	retq   
  400622:	0f 1f 40 00          	nopl   0x0(%rax)
  400626:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40062d:	00 00 00 

0000000000400630 <register_tm_clones>:
  400630:	be 48 10 60 00       	mov    $0x601048,%esi
  400635:	55                   	push   %rbp
  400636:	48 81 ee 48 10 60 00 	sub    $0x601048,%rsi
  40063d:	48 c1 fe 03          	sar    $0x3,%rsi
  400641:	48 89 e5             	mov    %rsp,%rbp
  400644:	48 89 f0             	mov    %rsi,%rax
  400647:	48 c1 e8 3f          	shr    $0x3f,%rax
  40064b:	48 01 c6             	add    %rax,%rsi
  40064e:	48 d1 fe             	sar    %rsi
  400651:	74 15                	je     400668 <register_tm_clones+0x38>
  400653:	b8 00 00 00 00       	mov    $0x0,%eax
  400658:	48 85 c0             	test   %rax,%rax
  40065b:	74 0b                	je     400668 <register_tm_clones+0x38>
  40065d:	5d                   	pop    %rbp
  40065e:	bf 48 10 60 00       	mov    $0x601048,%edi
  400663:	ff e0                	jmpq   *%rax
  400665:	0f 1f 00             	nopl   (%rax)
  400668:	5d                   	pop    %rbp
  400669:	c3                   	retq   
  40066a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400670 <__do_global_dtors_aux>:
  400670:	80 3d d9 09 20 00 00 	cmpb   $0x0,0x2009d9(%rip)        # 601050 <completed.6960>
  400677:	75 11                	jne    40068a <__do_global_dtors_aux+0x1a>
  400679:	55                   	push   %rbp
  40067a:	48 89 e5             	mov    %rsp,%rbp
  40067d:	e8 6e ff ff ff       	callq  4005f0 <deregister_tm_clones>
  400682:	5d                   	pop    %rbp
  400683:	c6 05 c6 09 20 00 01 	movb   $0x1,0x2009c6(%rip)        # 601050 <completed.6960>
  40068a:	f3 c3                	repz retq 
  40068c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400690 <frame_dummy>:
  400690:	bf 08 0e 60 00       	mov    $0x600e08,%edi
  400695:	48 83 3f 00          	cmpq   $0x0,(%rdi)
  400699:	75 05                	jne    4006a0 <frame_dummy+0x10>
  40069b:	eb 93                	jmp    400630 <register_tm_clones>
  40069d:	0f 1f 00             	nopl   (%rax)
  4006a0:	b8 00 00 00 00       	mov    $0x0,%eax
  4006a5:	48 85 c0             	test   %rax,%rax
  4006a8:	74 f1                	je     40069b <frame_dummy+0xb>
  4006aa:	55                   	push   %rbp
  4006ab:	48 89 e5             	mov    %rsp,%rbp
  4006ae:	ff d0                	callq  *%rax
  4006b0:	5d                   	pop    %rbp
  4006b1:	e9 7a ff ff ff       	jmpq   400630 <register_tm_clones>
  4006b6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4006bd:	00 00 00 

00000000004006c0 <process>:
{
  4006c0:	41 56                	push   %r14
  4006c2:	41 55                	push   %r13
     int n = 0;
  4006c4:	31 d2                	xor    %edx,%edx
{
  4006c6:	41 54                	push   %r12
  4006c8:	55                   	push   %rbp
  4006c9:	bd 01 00 00 00       	mov    $0x1,%ebp
  4006ce:	53                   	push   %rbx
     const int id = *((int *) arg);
  4006cf:	48 63 1f             	movslq (%rdi),%rbx
  4006d2:	29 dd                	sub    %ebx,%ebp
  4006d4:	49 89 dc             	mov    %rbx,%r12
  4006d7:	4c 63 ed             	movslq %ebp,%r13
  4006da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
     flag[id] = true;
  4006e0:	c6 83 58 10 60 00 01 	movb   $0x1,0x601058(%rbx)
  4006e7:	41 0f b6 85 58 10 60 	movzbl 0x601058(%r13),%eax
  4006ee:	00 
     turn = 1 - id;
  4006ef:	89 2d 5f 09 20 00    	mov    %ebp,0x20095f(%rip)        # 601054 <turn>
  4006f5:	0f 1f 00             	nopl   (%rax)
     while (flag[1 - id] == true &&
  4006f8:	84 c0                	test   %al,%al
  4006fa:	75 fc                	jne    4006f8 <process+0x38>
     fprintf(stdout, "%d: Thread %d in critical section\n", n++, id);
  4006fc:	48 8b 3d 45 09 20 00 	mov    0x200945(%rip),%rdi        # 601048 <stdout@@GLIBC_2.2.5>
  400703:	44 89 e1             	mov    %r12d,%ecx
  400706:	be b8 07 40 00       	mov    $0x4007b8,%esi
  40070b:	44 8d 72 01          	lea    0x1(%rdx),%r14d
  40070f:	e8 1c fe ff ff       	callq  400530 <fprintf@plt>
     fflush(stdout);
  400714:	48 8b 3d 2d 09 20 00 	mov    0x20092d(%rip),%rdi        # 601048 <stdout@@GLIBC_2.2.5>
  40071b:	e8 20 fe ff ff       	callq  400540 <fflush@plt>
     flag[id] = false;
  400720:	c6 83 58 10 60 00 00 	movb   $0x0,0x601058(%rbx)
     fprintf(stdout, "%d: Thread %d in critical section\n", n++, id);
  400727:	44 89 f2             	mov    %r14d,%edx
     goto start;
  40072a:	eb b4                	jmp    4006e0 <process+0x20>
  40072c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400730 <__libc_csu_init>:
  400730:	41 57                	push   %r15
  400732:	41 56                	push   %r14
  400734:	41 89 ff             	mov    %edi,%r15d
  400737:	41 55                	push   %r13
  400739:	41 54                	push   %r12
  40073b:	4c 8d 25 b6 06 20 00 	lea    0x2006b6(%rip),%r12        # 600df8 <__frame_dummy_init_array_entry>
  400742:	55                   	push   %rbp
  400743:	48 8d 2d b6 06 20 00 	lea    0x2006b6(%rip),%rbp        # 600e00 <__init_array_end>
  40074a:	53                   	push   %rbx
  40074b:	49 89 f6             	mov    %rsi,%r14
  40074e:	49 89 d5             	mov    %rdx,%r13
  400751:	4c 29 e5             	sub    %r12,%rbp
  400754:	48 83 ec 08          	sub    $0x8,%rsp
  400758:	48 c1 fd 03          	sar    $0x3,%rbp
  40075c:	e8 97 fd ff ff       	callq  4004f8 <_init>
  400761:	48 85 ed             	test   %rbp,%rbp
  400764:	74 20                	je     400786 <__libc_csu_init+0x56>
  400766:	31 db                	xor    %ebx,%ebx
  400768:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40076f:	00 
  400770:	4c 89 ea             	mov    %r13,%rdx
  400773:	4c 89 f6             	mov    %r14,%rsi
  400776:	44 89 ff             	mov    %r15d,%edi
  400779:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40077d:	48 83 c3 01          	add    $0x1,%rbx
  400781:	48 39 dd             	cmp    %rbx,%rbp
  400784:	75 ea                	jne    400770 <__libc_csu_init+0x40>
  400786:	48 83 c4 08          	add    $0x8,%rsp
  40078a:	5b                   	pop    %rbx
  40078b:	5d                   	pop    %rbp
  40078c:	41 5c                	pop    %r12
  40078e:	41 5d                	pop    %r13
  400790:	41 5e                	pop    %r14
  400792:	41 5f                	pop    %r15
  400794:	c3                   	retq   
  400795:	90                   	nop
  400796:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40079d:	00 00 00 

00000000004007a0 <__libc_csu_fini>:
  4007a0:	f3 c3                	repz retq 

Disassembly of section .fini:

00000000004007a4 <_fini>:
  4007a4:	48 83 ec 08          	sub    $0x8,%rsp
  4007a8:	48 83 c4 08          	add    $0x8,%rsp
  4007ac:	c3                   	retq   
